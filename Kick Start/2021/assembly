	.file	"A.c"
	.text
	.globl	allEven
	.def	allEven;	.scl	2;	.type	32;	.endef
	.seh_proc	allEven
allEven:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	.seh_endprologue
	movl	%ecx, 16(%rbp)
	jmp	.L2
.L5:
	movl	16(%rbp), %eax
	andl	$1, %eax
	testl	%eax, %eax
	je	.L3
	movl	$0, %eax
	jmp	.L4
.L3:
	movl	16(%rbp), %eax
	movslq	%eax, %rdx
	imulq	$1717986919, %rdx, %rdx
	shrq	$32, %rdx
	sarl	$2, %edx
	sarl	$31, %eax
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, 16(%rbp)
.L2:
	cmpl	$0, 16(%rbp)
	jne	.L5
	movl	$1, %eax
.L4:
	popq	%rbp
	ret
	.seh_endproc
	.def	__main;	.scl	2;	.type	32;	.endef
	.section .rdata,"dr"
.LC0:
	.ascii "%d\0"
	.text
	.globl	main
	.def	main;	.scl	2;	.type	32;	.endef
	.seh_proc	main
main:
	pushq	%rbp
	.seh_pushreg	%rbp
	movq	%rsp, %rbp
	.seh_setframe	%rbp, 0
	addq	$-128, %rsp
	.seh_stackalloc	128
	.seh_endprologue
	call	__main
	leaq	-20(%rbp), %rax
	movq	%rax, %rdx
	leaq	.LC0(%rip), %rcx
	call	scanf
	movl	$1, -4(%rbp)
	jmp	.L7
.L11:
	leaq	-24(%rbp), %rax
	movq	%rax, %rdx
	leaq	.LC0(%rip), %rcx
	call	scanf
	movl	-24(%rbp), %edx
	leaq	-96(%rbp), %rax
	movl	%edx, %r8d
	leaq	.LC0(%rip), %rdx
	movq	%rax, %rcx
	call	sprintf
	movl	$0, -8(%rbp)
	movl	$63, -12(%rbp)
	jmp	.L8
.L10:
	movl	-12(%rbp), %eax
	cltq
	movzbl	-96(%rbp,%rax), %eax
	movl	%eax, %edx
	sarb	$7, %dl
	shrb	$7, %dl
	addl	%edx, %eax
	andl	$1, %eax
	subl	%edx, %eax
	cmpb	$1, %al
	jne	.L9
	movl	-12(%rbp), %eax
	movl	%eax, -8(%rbp)
.L9:
	decl	-12(%rbp)
.L8:
	cmpl	$0, -12(%rbp)
	jns	.L10
	movl	$64, %eax
	subl	-8(%rbp), %eax
	movl	%eax, -16(%rbp)
	incl	-4(%rbp)
.L7:
	movl	-20(%rbp), %eax
	cmpl	%eax, -4(%rbp)
	jle	.L11
	movl	$0, %eax
	subq	$-128, %rsp
	popq	%rbp
	ret
	.seh_endproc
	.ident	"GCC: (GNU) 9.2.0"
	.def	scanf;	.scl	2;	.type	32;	.endef
	.def	sprintf;	.scl	2;	.type	32;	.endef
